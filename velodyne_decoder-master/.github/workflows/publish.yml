name: Publish
on:
  release:
    types: [ published ]
  workflow_dispatch:
jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine

      - name: Build SDist
        run: python -m build --sdist

      - name: Check metadata
        run: python -m twine check dist/*

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2

      - uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BEFORE_BUILD: pip install --prefer-binary --upgrade cmake numpy
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_ARCHS_MACOS: auto64
          # Disable building PyPy wheels on all platforms
          CIBW_SKIP: pp*

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/setup-python@v2

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
